{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n}; //const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nexport default configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(configureStore);","map":{"version":3,"sources":["C:/Users/athar/OneDrive/Documents/Projects/Sustainable E-commerce Project/Code/UI_Frontend/src/redux/store.js"],"names":["configureStore","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","persistedReducer","reducer","cart","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBC,EAAAA,OAAO,EAAE,CAFS;AAGlBH,EAAAA;AAHkB,CAAtB,C,CAMA;;AAEA,MAAMI,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBV,WAAhB,CAAvC;AAEA,eAAeF,cAAc,CAAC;AAC1BgB,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEhB,WADD;AAELiB,IAAAA,IAAI,EAAEH;AAFD,GADiB;AAK1BI,EAAAA,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACjB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AANM,CAAD,CAA7B;AAcA,OAAO,IAAIa,SAAS,GAAGpB,YAAY,CAACH,cAAD,CAA5B","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\"; \r\nimport cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userRedux\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    version: 1,\r\n    storage,\r\n};\r\n\r\n//const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, userReducer);\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        cart: cartReducer,\r\n        user: persistedReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n\r\n});\r\n\r\nexport let persistor = persistStore(configureStore);"]},"metadata":{},"sourceType":"module"}